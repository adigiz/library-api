// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	models "git.garena.com/sea-labs-id/trainers/library-api/models"
	mock "github.com/stretchr/testify/mock"
)

// UserRepository is an autogenerated mock type for the UserRepository type
type UserRepository struct {
	mock.Mock
}

// FindUsers provides a mock function with given fields: query
func (_m *UserRepository) FindUsers(query string) ([]*models.User, error) {
	ret := _m.Called(query)

	var r0 []*models.User
	if rf, ok := ret.Get(0).(func(string) []*models.User); ok {
		r0 = rf(query)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(query)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MatchingCredential provides a mock function with given fields: email, password
func (_m *UserRepository) MatchingCredential(email string, password string) (*models.User, error) {
	ret := _m.Called(email, password)

	var r0 *models.User
	if rf, ok := ret.Get(0).(func(string, string) *models.User); ok {
		r0 = rf(email, password)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(email, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
