// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	dto "library-api/dto"
	mock "github.com/stretchr/testify/mock"

	models "library-api/models"
)

// BookService is an autogenerated mock type for the BookService type
type BookService struct {
	mock.Mock
}

// AddBook provides a mock function with given fields: payload
func (_m *BookService) AddBook(payload *dto.BookReq) (*dto.BookRes, error) {
	ret := _m.Called(payload)

	var r0 *dto.BookRes
	if rf, ok := ret.Get(0).(func(*dto.BookReq) *dto.BookRes); ok {
		r0 = rf(payload)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.BookRes)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*dto.BookReq) error); ok {
		r1 = rf(payload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBooks provides a mock function with given fields:
func (_m *BookService) GetBooks() ([]*models.Book, error) {
	ret := _m.Called()

	var r0 []*models.Book
	if rf, ok := ret.Get(0).(func() []*models.Book); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Book)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
