// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	dto "git.garena.com/sea-labs-id/trainers/library-api/dto"
	mock "github.com/stretchr/testify/mock"

	models "git.garena.com/sea-labs-id/trainers/library-api/models"
)

// BorrowingService is an autogenerated mock type for the BorrowingService type
type BorrowingService struct {
	mock.Mock
}

// BorrowBook provides a mock function with given fields: borrowingReq
func (_m *BorrowingService) BorrowBook(borrowingReq *dto.BorrowingReq) (*models.BorrowingRecord, error) {
	ret := _m.Called(borrowingReq)

	var r0 *models.BorrowingRecord
	if rf, ok := ret.Get(0).(func(*dto.BorrowingReq) *models.BorrowingRecord); ok {
		r0 = rf(borrowingReq)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.BorrowingRecord)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*dto.BorrowingReq) error); ok {
		r1 = rf(borrowingReq)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReturnBook provides a mock function with given fields: id
func (_m *BorrowingService) ReturnBook(id int) (*models.BorrowingRecord, error) {
	ret := _m.Called(id)

	var r0 *models.BorrowingRecord
	if rf, ok := ret.Get(0).(func(int) *models.BorrowingRecord); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.BorrowingRecord)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
